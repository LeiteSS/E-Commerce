{"ast":null,"code":"var _jsxFileName = \"/home/ssl/Documents/workspace/e_commerce/project_e_commerce-main/src/components/CheckoutForm/AddressForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { commerce } from './../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({\n  checkoutToken,\n  next\n}) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const options = shippingOptions.map(sO => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`\n  }));\n  console.log(countries);\n  console.log(subdi);\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountries(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async countryCode => {\n    const {\n      subdivisions\n    } = await commerce.services.localeListSubdivisions(countryCode);\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n    const options = await commerce.checkout.getshippingOptions(checkoutTokenId, {\n      country,\n      region\n    });\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7o da Compra\"), /*#__PURE__*/React.createElement(FormProvider, Object.assign({}, methods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: methods.handleSubmit(data => next({ ...data,\n      shippingCountry,\n      shippingSubdivision,\n      shippingOption\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"firstName\",\n    label: \"Primeiro Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"lastName\",\n    label: \"Sobrenome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"address1\",\n    label: \"Endere\\xE7o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"city\",\n    label: \"Cidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    required: true,\n    name: \"zip\",\n    label: \"ZIP / Postal Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Pa\\xEDs\"), /*#__PURE__*/React.createElement(Select, {\n    value: shippingCountry,\n    fullWidth: true,\n    onChange: e => setShippingCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    key: country.id,\n    value: country.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }, country.label)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Subdivision\"), /*#__PURE__*/React.createElement(Select, {\n    value: shippingSubdivision,\n    fullWidth: true,\n    onChange: e => setShippingSubdivision(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, subdivisions.map(subdivision => /*#__PURE__*/React.createElement(MenuItem, {\n    key: subdivision.id,\n    value: subdivision.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, subdivision.label)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"Op\\xE7\\xE3o de Entrega\"), /*#__PURE__*/React.createElement(Select, {\n    value: shippingOption,\n    fullWidth: true,\n    onChange: e => setShippingSubdivision(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.id,\n    value: option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, option.label))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: \"/cart\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Voltar Para o Carrinho\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Proximo\")))));\n};\n\nexport default AddressForm;","map":{"version":3,"sources":["/home/ssl/Documents/workspace/e_commerce/project_e_commerce-main/src/components/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","Link","commerce","FormInput","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivision","setShippingSubdivision","shippingSubdivisions","setShippingSubdivisions","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","countries","Object","entries","map","code","name","id","label","subdivisions","options","sO","description","price","formatted_with_symbol","console","log","subdi","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisions","countryCode","localeListSubdivisions","fetchShippingOptions","country","region","checkout","getshippingOptions","handleSubmit","data","e","target","value","subdivision","option","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from './../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name}));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name}));\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})`}));\n    console.log(countries);\n    console.log(subdi);\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n        setShippingCountries(countries);\n        setShippingCountries(Object.keys(countries)[0]);\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getshippingOptions(checkoutTokenId, { country, region });\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id)\n    } \n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, []);\n\n    useEffect(() => {\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision])\n\n    return (\n        <> \n            <Typography variant=\"h6\" gutterBottom>Endereço da Compra</Typography>\n            <FormProvider { ...methods }>\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='Primeiro Nome' />\n                        <FormInput required name='lastName' label='Sobrenome' />\n                        <FormInput required name='address1' label='Endereço' />\n                        <FormInput required name='email' label='Email' />\n                        <FormInput required name='city' label='Cidade' />\n                        <FormInput required name='zip' label='ZIP / Postal Code' />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>País</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Opção de Entrega</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Voltar Para o Carrinho</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Proximo</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    );\n};\n\nexport default AddressForm;"]},"metadata":{},"sourceType":"module"}